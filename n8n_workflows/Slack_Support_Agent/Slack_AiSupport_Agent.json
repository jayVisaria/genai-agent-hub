{
  "name": "Slack_AiSupport_Agent",
  "nodes": [
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09M28ZEMCZ",
          "mode": "list",
          "cachedResultName": "support_personal"
        },
        "text": "={{ $json.output }}",
        "otherOptions": {
          "mrkdwn": true
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1456,
        0
      ],
      "id": "d0218f1a-e334-4fec-b355-8ae44aa5faf0",
      "name": "Send Response to Slack1",
      "webhookId": "300d20c0-92b5-4617-b1d8-5f01bce24635",
      "credentials": {
        "slackApi": {
          "id": "tsTVsuPuLJYk6MQO",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create a support ticket in Zendesk. Use this ONLY after user confirms ticket creation AND after providing troubleshooting steps that didn't resolve the issue.",
        "description": "={{ $fromAI('description', 'Complete description including troubleshooting steps already attempted') }}",
        "additionalFields": {
          "status": "new",
          "subject": "={{ $fromAI('subject', 'Clear subject line (max 60 chars)') }}",
          "tags": "={{ $fromAI('tags', 'Tags: technical,billing,account,bug,feature,question,escalated') }}",
          "type": "incident"
        }
      },
      "type": "n8n-nodes-base.zendeskTool",
      "typeVersion": 1,
      "position": [
        704,
        224
      ],
      "id": "15783d9a-28f2-4378-90ab-4a7c520e2a10",
      "name": "Create Zendesk Ticket1",
      "credentials": {
        "zendeskApi": {
          "id": "aKgyfIrRustGnKnH",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get recent tickets from Zendesk when user asks about ticket status or lists tickets.",
        "operation": "getAll",
        "limit": 10,
        "options": {
          "sortBy": "created_at",
          "sortOrder": "desc"
        }
      },
      "type": "n8n-nodes-base.zendeskTool",
      "typeVersion": 1,
      "position": [
        832,
        224
      ],
      "id": "7ca7a8cd-f708-47ff-8d1e-49275f626d6c",
      "name": "Get Zendesk Tickets1",
      "credentials": {
        "zendeskApi": {
          "id": "aKgyfIrRustGnKnH",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get specific ticket details by ID when user asks about a particular ticket number (e.g., 'What's the status of ticket #12345?').",
        "operation": "get",
        "id": "={{ $fromAI('ticket_id', 'The ticket ID number from user query') }}"
      },
      "type": "n8n-nodes-base.zendeskTool",
      "typeVersion": 1,
      "position": [
        960,
        224
      ],
      "id": "f635215d-e163-47cd-9e06-bd100d14b47a",
      "name": "Get Specific Ticket1",
      "credentials": {
        "zendeskApi": {
          "id": "aKgyfIrRustGnKnH",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-09-2025",
        "options": {
          "maxOutputTokens": 1024,
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        448,
        224
      ],
      "id": "f35115f7-b2a5-450c-bbb2-1b3e91e6f6aa",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "SRPEBEiczYa95ulL",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1,
      "position": [
        576,
        224
      ],
      "id": "f777c472-cf0c-4e5e-b5f9-43798496ab33",
      "name": "Conversation Memory1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "session_id",
              "name": "session_id",
              "value": "={{ $json.user }}_{{ $json.channel }}{{ $json.thread_ts ? '_' + $json.thread_ts : '' }}",
              "type": "string"
            },
            {
              "id": "message_text",
              "name": "message_text",
              "value": "={{ $json.text.replace(/<@[A-Z0-9]+>/g, '').trim() }}",
              "type": "string"
            },
            {
              "id": "user_id",
              "name": "user_id",
              "value": "={{ $json.user }}",
              "type": "string"
            },
            {
              "id": "channel_id",
              "name": "channel_id",
              "value": "={{ $json.channel }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        0
      ],
      "id": "0359e476-9e74-4bc7-a2ae-7cb6dddbe502",
      "name": "Extract Session & Message1"
    },
    {
      "parameters": {
        "trigger": [
          "app_mention"
        ],
        "channelId": {
          "__rl": true,
          "value": "C09M28ZEMCZ",
          "mode": "list",
          "cachedResultName": "support_personal"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.slackTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "63090282-56e8-47a8-b139-53c8619d0715",
      "name": "Slack Trigger1",
      "webhookId": "a37ac330-aa8e-4fc9-8aae-9337dc8ca0a2",
      "credentials": {
        "slackApi": {
          "id": "tsTVsuPuLJYk6MQO",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Search the company knowledge base for answers to user questions, including past ticket solutions, troubleshooting guides, and common issues. Use this FIRST for any user query before providing troubleshooting steps.",
        "milvusCollection": {
          "__rl": true,
          "value": "ticket_collection2",
          "mode": "list",
          "cachedResultName": "ticket_collection2"
        },
        "topK": 3
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
      "typeVersion": 1.3,
      "position": [
        1088,
        224
      ],
      "id": "c3dcb95b-7b4a-4d16-b5a8-579807f68968",
      "name": "Milvus Vector Store1",
      "credentials": {
        "milvusApi": {
          "id": "CZRMJ5sbsrm1HMYS",
          "name": "Milvus account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-embedding-001"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        1168,
        432
      ],
      "id": "e5050258-8769-4081-91ee-94cda7020075",
      "name": "Embeddings Google Gemini1",
      "credentials": {
        "googlePalmApi": {
          "id": "SRPEBEiczYa95ulL",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message_text }}",
        "options": {
          "systemMessage": "You are an intelligent AI support agent for our company's Slack-Zendesk integration system.\n\n## RESPONSE FORMATTING FOR SLACK\n- Use Slack's mrkdwn syntax (not standard markdown)\n- Keep messages concise, clear, and chat-friendly\n- Use *single asterisks* for bold (not double)\n- Use _underscores_ for italics\n- Use simple dash (-) or bullet (•) for lists\n- Format ticket details in a clean, readable way:\n  \n  *Ticket ID 1*\n  \n  Subject: SAMPLE: How does Zendesk work\n  Status: Open\n  Priority: Normal\n  Description: [description text]\n  Created: 2025-10-01T11:04:19Z\n  \n- Use line breaks for better readability\n- Avoid excessive bold/italic formatting\n- Don't use triple asterisks (***) or decorative symbols\n- Keep field labels simple (no bold on values)\n- Use > for blockquotes when needed\n- Use ```\n\n## SEARCH WORKFLOW: KB FIRST, THEN TROUBLESHOOT\n**ALWAYS follow this sequence:**\n\n1. **KNOWLEDGE BASE SEARCH**: For ANY user query, first search the knowledge base using the Milvus tool\n2. **KB RESULT EVALUATION**:\n   - If KB contains relevant answer → Provide that answer with confidence\n   - If KB results are partial → Combine KB info with troubleshooting\n   - If KB has no relevant results → Proceed with normal troubleshooting flow\n\n## KNOWLEDGE BASE USAGE\n- **Search for**: Similar issues, solutions, procedures, common problems, past tickets\n- **Always search first** before providing troubleshooting steps\n- **Cite KB source** when using information from knowledge base\n- **Format**: \"Based on our knowledge base: [answer]\" or \"I found this in our previous solutions: [answer]\"\n\n## FALLBACK TO TROUBLESHOOTING\nIf knowledge base doesn't have the answer, then follow the troubleshooting workflow:\n\n### CORE PHILOSOPHY: RESOLVE FIRST, ESCALATE SECOND\nYour goal is to **resolve issues through troubleshooting** before creating tickets. Only escalate when:\n1. User has tried suggested solutions and they didn't work\n2. Issue requires backend/admin access\n3. User explicitly requests ticket creation after troubleshooting\n\n[Continue with your detailed troubleshooting states, steps, ticket queries, common issues/solutions, priority assessment, etc.]\n\nAnalyze the user's message using conversation memory and respond appropriately!\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        704,
        0
      ],
      "id": "8c265a55-f001-43b9-a7a6-75dc05faa43d",
      "name": "AI Support Agent"
    }
  ],
  "pinData": {},
  "connections": {
    "Create Zendesk Ticket1": {
      "ai_tool": [
        [
          {
            "node": "AI Support Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Zendesk Tickets1": {
      "ai_tool": [
        [
          {
            "node": "AI Support Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Specific Ticket1": {
      "ai_tool": [
        [
          {
            "node": "AI Support Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Support Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Support Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Extract Session & Message1": {
      "main": [
        [
          {
            "node": "AI Support Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack Trigger1": {
      "main": [
        [
          {
            "node": "Extract Session & Message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Milvus Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Support Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini1": {
      "ai_embedding": [
        [
          {
            "node": "Milvus Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "AI Support Agent": {
      "main": [
        [
          {
            "node": "Send Response to Slack1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9999b9a7-da0a-431a-a9e6-d35d6b600568",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "148366cec5c93405ac1917a694fb650dd6f744bc97824c5efeb51b5ea786c948"
  },
  "id": "JMwtkFPHOKi7fRQ7",
  "tags": []
}